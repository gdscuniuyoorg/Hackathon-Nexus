import React from "react";
import DevPage from "../components/DevPage";
import apiData from "../utils/apiData";

const Developer = () => {
  const {
    curlCode,
    jsCode,
    pythonCode,
    validateCurlCode,
    validateJsCode,
    validatePythonCode,
    jsonResOne,
  } = apiData();

  return (
    <section className="dev">
      <h2>QuestionQuiz - Exams Preparation Engine API</h2>
      <p>
        QuestionQuiz is a powerful tool designed to help developers and students
        interact programmatically with our quiz and examination preparation
        system. The API allows users to upload various document formats (PDF,
        images, text files, DOC/DOCX) and automatically generate questions,
        quizzes, and answers based on the content. It also includes capabilities
        for validating user responses, giving immediate feedbackâ€”all without
        needing a login system.
      </p>
      <h3>This API is ideal for:</h3>
      <ul>
        <li>
          Educational Platforms: Integrate it into e-learning platforms for
          dynamic quiz generation and testing.
        </li>
        <li>
          Student Assistance Tools: Create apps that help students practice
          exams based on their own study materials.
        </li>
        <li>
          Developers and Hackathon Teams: Integrate advanced quiz generation
          features into applications with ease.
        </li>
      </ul>
      <h3>Document Upload and Processing:</h3>
      <ul>
        <li>
          Accepts multiple file formats including PDF, images (PNG, JPEG, etc.),
          text files (TXT), and Word documents (DOC/DOCX).
        </li>
        <li>
          Automatically extracts text from uploaded documents using Optical
          Character Recognition (OCR) and text parsing technologies.
        </li>
      </ul>
      <h3>Quiz Generation:</h3>
      <ul>
        <li>AI-powered question generation based on document content.</li>
        <li>
          Configurable difficulty levels (easy, medium, hard, mixed) and
          customizable question counts for each quiz.
        </li>
        <li>
          Adaptive and dynamic quizzes that adjust based on user performance.
        </li>
      </ul>
      <h3>Answer Validation:</h3>
      <ul>
        <li>
          Validates user responses against the correct answers generated by the
          AI.
        </li>
        <li>
          Uses semantic analysis to determine whether user responses are
          correct, even if the wording differs from the expected answer.
        </li>
      </ul>
      <h2>Getting Started</h2>
      <p>
        Make Your First API Call: Use our quick start guide to make your first
        request.
      </p>
      <h3>POST /upload: Upload files for quiz generation.</h3>
      <p>
        Description: Accepts files (PDF, images, text, DOC/DOCX) and processes
        them to extract content and generate quiz questions.
      </p>
      <h4>Request Parameters:</h4>
      <ul>
        <li>numQuestions: The number of questions to generate.</li>
        <li>
          difficulty: The difficulty level of the questions (easy, medium, hard,
          mixed).
        </li>
      </ul>
      <h4>Request Form:</h4>
      <ul>
        <li>files: The path to the file.</li>
      </ul>
      <div>
        <DevPage codeString={curlCode} language="bash" />

        <DevPage codeString={jsCode} language="javascript" />

        <DevPage codeString={pythonCode} language="python" />
      </div>
      <h4>Response Type</h4>
      <DevPage codeString={jsonResOne} language="json" />
      <h3>POST /validate-answer: Validate user answers.</h3>
      <p>
        Description: Intelligently compares user-provided answers with the
        correct answer
      </p>
      <h4>
        Request Body: The question, correct answer, and user's answer in JSON
        format.
      </h4>
      <DevPage
        codeString={`{
  "question": "The question to validate.",
  "correctAnswer": "The correct answer to the question.",
  "userAnswer": "The user's answer."
}`}
        language="json"
      />
      <h4>Making Request</h4>
      <div>
        <DevPage codeString={validateCurlCode} language="bash" />

        <DevPage codeString={validateJsCode} language="javascript" />

        <DevPage codeString={validatePythonCode} language="python" />
      </div>
      <h4>Response Type:</h4>
      <DevPage
        codeString={`{
  "result": "Correct",
  "explanation": "Adobe is the shortened name of Adobe Systems Incorporated."
}`}
        language="json"
      />
      <p>
        This API documentation provides you with everything you need to start
        integrating the Exams Preparation Engine into your projects. With
        easy-to-use endpoints, powerful AI capabilities, and flexible quiz
        generation options, you'll have the tools to build innovative and
        engaging educational experiences. Happy Hacking ðŸ˜€!
      </p>
    </section>
  );
};

export default Developer;
